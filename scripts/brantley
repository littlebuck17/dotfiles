#!/bin/bash

# Brantley is the secret to your success

if [ -f ~/.brantley ]; then
    . ~/.brantley
else
    echo "Configuration file ~/.brantley not found"
    exit
fi

if [ -z ${todolist+x} ]; then 
    echo "Set location of todolist to your today list"
    exit
fi

function addtask() {
    project="${1}"
    task="${2}"

    if [ ${#task} -gt 0 ]; then
        grep "^${project}:" "${todolist}" > /dev/null
        if [ $? -eq 1 ]; then
            echo "Adding project ${project}..."
            sed -i "1s/^/\n${project}:\n/" "${todolist}"
        fi
        echo "Adding to project ${project}..."
        sed -i "s/${project}:/${project}:\n\t- ${task}/" "${todolist}"
    elif [ ${#project} -gt 0 ]; then
        echo "Adding to the Inbox..."
        sed -i "1s/^/\t- ${project}\n/" "${todolist}"
    else
        echo "To add a task, enter the task as a parameter."
        echo "You can also supply a project name as the first parameter."
    fi
}

function ls() {

    local linenum=0
    case "${1}" in
        today)
            grep "@today\|^[A-Za-z].*:" "${todolist}" | grep -v "@done"
            ;;

        *)
            grep "^${1}:" "${todolist}" > /dev/null
            if [ $? -eq 1 ]; then
                #cat ${todolist}
                while read i || [[ -n $i ]]; do
                    
                    ((linenum++))
                    if [[ ${i} == ".*:" ]]; then
                        echo "${i}"
                    else
                        if [ ${#i} -gt 0 ]; then printf "%02d" $linenum;echo " ${i}"; fi
                    fi
                done < ${todolist}
            else
                lsproject "${1}"
            fi
            ;;
    esac    
}

function lsproject() {

    local project=${1}
    local found=false
    local linenum=0
    echo "Items in ${project}:"
    while read i || [[ -n $i ]]; do
        #echo "${i}"
        ((linenum++))
        if [ "${found}" = true ]; then
            if [[ ${i} =~ ":" ]]; then
                found=false
            else
                if [ ${#i} -gt 0 ]; then printf "%02d" $linenum;echo " ${i}"; fi
            fi
        fi
        if [[ ${i} == ${project}*: ]]; then found=true; fi
    done < "${todolist}"
}

function search() {
    grep -v "^[A-Za-z].*:" "${todolist}" | grep -E -i "${1}"
} 

function append() {
    local line=${1}
    local text=${2}
    if [ ${#text} -gt 0 ]; then
        sed -i "${line}s/$/ ${text}/" "${todolist}"
    else
        echo "Nothing to append!"
    fi
}

function markdone() {
    local line=${1}
    dd=$(date +"%Y-%m-%d")
    if [[  $(sed "${line}q;d" "${todolist}") == *@done* ]]; then
        sed -i "${line}s/ @done(.*)//" "${todolist}"
    else
        sed -i "${line}s/$/ @done(${dd})/" "${todolist}"
    fi
}

function markdue() {
    local line=${1}
    local due=${2}
    if [[  $(sed "${line}q;d" "${todolist}") == *@due* ]]; then
        sed -i "${line}s/@due(.*)/@due(${due})/" "${todolist}"
    else
        sed -i "${line}s/$/ @due(${due})/" "${todolist}"
    fi
}

action=${1}

case "${action}" in
    add)
        addtask "${2}" "${3}"
        ;;

    ls)
        ls "${2}"
        ;;

    search)
        search "${2}"
        ;;

    append)
        append "${2}" "${3}"
        ;;

    due)
        markdue "${2}" "${3}"
        ;;
    done)
        markdone "${2}"
        ;;

    *)
cat << EOF
Brantley, the secret to your success.

Add tasks:
    brantley add "This is a task to add"
    brantley add PROJECT "Add task to project PROJECT"

List tasks:
    brantley ls
    brantley ls today
    brantley ls PROJECT

Search tasks:
    brantley search REGULAREXPRESSION

It might be helpful to alias b=brantley
EOF
        exit 1
esac


